{"version":3,"sources":["components/Spinner/index.js","App.js","reportWebVitals.js","index.js"],"names":["Spinner","props","left","className","classNames","children","spreadsheetId","externalLinkSvg","xmlns","width","height","viewBox","fill","d","runQuery","query","url","encodeURIComponent","fetch","then","response","text","byRowNum","rowNum","byTopRows","num","lastRow","parseCsv","csv","csvtojson","noheader","output","fromString","renderRow","row","search","filter","Boolean","map","word","index","split","segment","arr","length","Fragment","renderRows","rows","renderSkeleton","skeleton","Array","nothing","App","inputRef","useRef","textRef","useState","placeholderHeight","setPlaceholderHeight","loading","setLoading","showIntro","setShowIntro","setSearch","trimmedSearch","setTrimmedSearch","searchHistory","setSearchHistory","searchResult","setSearchResult","wordOfDay","setWordOfDay","latestWords","setLatestWords","count","setCount","latestWordsNode","useMemo","isArray","onClick","setSearchWord","current","useCallback","value","trim","onSearchInputChange","event","target","onClearButtonClick","pushSearchHistory","key","prevSearchHistory","now","Date","useEffect","focus","todayDiff","Math","floor","getTimezoneOffset","a","str","lines","JSON","parse","Number","wordOfDayRows","hasOwnProperty","timeoutId","window","setTimeout","resultLines","clearTimeout","el","Element","getBoundingClientRect","ref","onChange","placeholder","disabled","style","getFullYear","getMonth","getDate","href","rel","slice","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4dfd429c.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\n\n\nexport default function Spinner (props) {\n    const {left} = props;\n    return (\n      <div className={classNames(\"spinner\", {\"spinner--left\": left})}>\n        <div className=\"spinner__spinner\"></div>\n        {props.children ? <div className=\"spinner__text\">{props.children}</div> : ''}\n      </div>\n    );\n}\n","import React, {useCallback, useEffect, useMemo, useRef, useState} from 'react';\nimport Spinner from \"./components/Spinner\";\nimport csvtojson from 'csvtojson';\n\n\nconst spreadsheetId = '106i6RLyxQYh-jgEnPxZ3TX3C-VT3-k7vY-7gdfoLTyI';\nconst latestWordCount = 15;\n\nconst externalLinkSvg = (<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\"><path fill=\"#00ADB5\" d=\"M5 3c-1.093 0-2 .907-2 2v14c0 1.093.907 2 2 2h14c1.093 0 2-.907 2-2v-7h-2v7H5V5h7V3H5zm9 0v2h3.586l-9.293 9.293 1.414 1.414L19 6.414V10h2V3h-7z\" /></svg>);\n\nfunction runQuery (query) {\n    /**\n     * Param \"tqx=out:csv\" is that the data should be responded as CSV format;\n     * \"range=A2:G\" is that the range will exclude the first row (header row)\n     * \"tq=xxx\" is the content of the \"Google Visualization API Query Language\"\n     * @see https://developers.google.com/chart/interactive/docs/querylanguage\n     */\n    const url = `https://docs.google.com/spreadsheets/d/${spreadsheetId}/gviz/tq?tqx=out:csv&range=A2:G&tq=${encodeURIComponent(query)}`;\n    return fetch(url)\n      .then(response => response.text());\n}\n\nfunction countRows (query) {\n    return runQuery(\"SELECT COUNT(A)\")\n      .then(str => str.split(\"\\n\"))\n      .then(lines => lines[lines.length - 1])\n      .then(JSON.parse)\n      .then(Number);\n}\n\nfunction byRowNum (rowNum) {\n  const url = `https://docs.google.com/spreadsheets/d/${spreadsheetId}/gviz/tq?tqx=out:csv&range=A${rowNum + 1}:G${rowNum + 1}`;\n  return fetch(url).then(response => response.text());\n}\n\nfunction byTopRows (num) {\n    const firstRow = 2;\n    const lastRow = firstRow + num - 1;\n    const url = `https://docs.google.com/spreadsheets/d/${spreadsheetId}/gviz/tq?tqx=out:csv&range=A${firstRow}:G${lastRow}`;\n    return fetch(url).then(response => response.text());\n}\n\nfunction parseCsv (csv) {\n    return csvtojson({noheader: true, output: 'csv'}).fromString(csv);\n}\n\nfunction renderRow (row, search = /$a/) {\n  return row.filter(Boolean).map((word, index) => {\n    const output = word.split(search).map((segment, index, arr) => {\n      if (arr.length - 1 === index) { return segment; }\n      return <React.Fragment key={index}>{segment}<div className=\"app__highlight\">{search}</div></React.Fragment>;\n    });\n    if (index === 0) { return (<code key={index} className=\"app__word app__word--chinese\">{output}</code>); }\n    return (<div key={index} className=\"app__word app__word--korean\">{index}. {output}</div>);\n  });\n}\n\nfunction renderRows (rows, search = /$a/) {\n    return rows.map((row, index) => (<tr key={index}><td>{renderRow(row, search)}</td></tr>));\n}\n\nfunction renderSkeleton (rowNum = 1) {\n    const skeleton = [...Array(rowNum)].map((nothing, index) => (\n      <tr key={index}>\n        <td>\n          <code className=\"app__word app__word--chinese app__word--placeholder\">...........</code>\n          <div className=\"app__word app__word--korean\">1. <span className=\"app__word-placeholder app__word-placeholder--background-color\">..................................................................</span></div>\n          <div className=\"app__word app__word--korean\">2. <span className=\"app__word-placeholder app__word-placeholder--background-color\">............................................</span></div>\n          <div className=\"app__word app__word--korean\">3. <span className=\"app__word-placeholder app__word-placeholder--background-color\">.....................................................</span></div>\n        </td>\n      </tr>\n    ));\n    return (\n      <table className=\"app__table\">\n        <tbody>\n          {skeleton}\n        </tbody>\n      </table>\n    );\n}\n\nfunction App() {\n  // ==========\n  // Refs\n  // ==========\n  const inputRef = useRef();\n  const textRef = useRef();\n\n  // ==========\n  // States\n  // ==========\n  const [placeholderHeight, setPlaceholderHeight] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [showIntro, setShowIntro] = useState(true);\n  const [search, setSearch] = useState('');\n  const [trimmedSearch, setTrimmedSearch] = useState('');\n  const [searchHistory, setSearchHistory] = useState({});\n  const [searchResult, setSearchResult] = useState(null);\n  const [wordOfDay, setWordOfDay] = useState(null);\n  const [latestWords, setLatestWords] = useState(null);\n  const [count, setCount] = useState(null);\n\n  // ==========\n  // Memos\n  // ==========\n  const latestWordsNode = useMemo(() => {\n      if (!Array.isArray(latestWords)) { return <Spinner />; }\n      return latestWords.map(([word], index) => <code className=\"app__latest-word\" key={index} onClick={() => { setSearchWord(word); }}>{word}</code>);\n  }, [latestWords, textRef.current]);\n\n  // ==========\n  // Callbacks\n  // ==========\n  const setSearchWord = useCallback(value => {\n    setLoading(true);\n    setShowIntro(false);\n    setSearch(value);\n    setTrimmedSearch(value.trim());\n  }, []);\n  const onSearchInputChange = useCallback(event => { setSearchWord(event.target.value); }, []);\n  const onClearButtonClick = useCallback(() => { setSearchWord(\"\"); }, []);\n  const pushSearchHistory = useCallback((key, value) => setSearchHistory(prevSearchHistory => ({...prevSearchHistory, [key]: value})), []);\n\n  // ==========\n  // Constants\n  // ==========\n  const now = useMemo(() => new Date(), []);\n\n  useEffect(() => {\n    textRef.current.focus();\n  }, []);\n\n  /**\n   * Fetch the \"word count\" and \"word of day\"\n   */\n  useEffect(() => {\n    const todayDiff = Math.floor(((+now) - (now.getTimezoneOffset() * 60 * 1000)) / (1000 * 60 * 60 * 24));\n\n    (async function () {\n      const rows = await countRows();\n      const wordOfDayRows = await byRowNum(rows - (todayDiff % rows));\n      setCount(rows);\n      parseCsv(wordOfDayRows).then(arr => arr[0]).then(setWordOfDay);\n    })();\n  }, [now]);\n\n  /**\n   * Latest added words\n   */\n  useEffect(() => {\n    (async function () {\n      const topRows = await byTopRows(latestWordCount);\n      parseCsv(topRows).then(setLatestWords);\n    })();\n  }, []);\n\n  useEffect(() => {\n    if (!searchHistory.hasOwnProperty(trimmedSearch)) {\n      const timeoutId = window.setTimeout(() => {\n        if (trimmedSearch !== \"\") {\n          /**\n           * A LIKE ... OR B LIKE ... OR C LIKE ...... unfortunately there isn't\n           * any shortcut statement for this kind of query, I have to list them\n           * all here\n           */\n          runQuery(`SELECT * WHERE A LIKE '%${trimmedSearch}%' OR B LIKE '%${trimmedSearch}%' OR C LIKE '%${trimmedSearch}%' OR D LIKE '%${trimmedSearch}%' OR E LIKE '%${trimmedSearch}%' OR F LIKE '%${trimmedSearch}%' OR G LIKE '%${trimmedSearch}%'`)\n            .then(resultLines => {\n              pushSearchHistory(trimmedSearch, resultLines);\n              parseCsv(resultLines)\n                .then(setSearchResult)\n                .then(() => setLoading(false));\n          });\n        } else {\n          setSearchResult(null);\n        }\n      }, 500);\n      return () => window.clearTimeout(timeoutId);\n    } else {\n      parseCsv(searchHistory[trimmedSearch])\n        .then(setSearchResult)\n        .then(() => setLoading(false));\n    }\n  }, [search, trimmedSearch, pushSearchHistory, searchHistory]);\n\n  useEffect(() => {\n    const el = inputRef.current;\n    if (el instanceof Element) { setPlaceholderHeight(el.getBoundingClientRect().height); }\n  }, []);\n\n  return (\n    <div className=\"app\">\n      <div className=\"app__input\" ref={inputRef}>\n        <div className=\"container\">\n          <input value={search} onChange={onSearchInputChange} placeholder=\"검색 搜尋\" ref={textRef} />\n          <button className=\"button\" disabled={!search} onClick={onClearButtonClick}>清除 해제</button>\n        </div>\n      </div>\n      <div className=\"container\">\n        <div className=\"app__placeholder\" style={{height: placeholderHeight}} />\n        {!showIntro && !trimmedSearch && (!Array.isArray(searchResult) || searchResult.length === 0) ? <div className=\"app__guide\">輸入搜索字詞，結果會喺呢度顯示。<hr /></div> : null}\n        {loading && trimmedSearch ? renderSkeleton(3) : null}\n        {!trimmedSearch && (!Array.isArray(searchResult) || searchResult.length === 0) ?\n        (\n          <>\n            <h5>每日詞語 오늘의 단어 ({`${now.getFullYear()}-${now.getMonth() + 1}-${now.getDate()}`})</h5>\n            {wordOfDay ? (<table className=\"app__table\"><tbody><tr><td>{renderRow(wordOfDay)}</td></tr></tbody></table>) : renderSkeleton(1)}\n            <h5>最近收錄詞語 {latestWordCount} 個 최근의 단어 {latestWordCount}게</h5>\n            {latestWordsNode}\n            <hr />\n          </>\n        ) : null}\n        {\n          showIntro && now ? (\n            <div className=\"app__intro\">\n              <p>呢個係一個依照由 이정윤 老師提供嘅字典所做嘅簡單廣東話韓文詞典網頁程式，多謝老師每日教我哋韓文。</p>\n              <p>現已收錄 {typeof count === \"number\" ? count : \"...\"} 個記錄。</p>\n              <p>\n                <a href=\"https://docs.google.com/forms/d/1FZkQx42_2uurNOU_CRO3o-EYszGolMBxFjherNJWaj4/viewform\" target=\"_blank\" rel=\"noreferrer\">{externalLinkSvg} 到此提交新記錄請求 (Google Form)</a>\n              </p>\n              <ul className=\"app__external-links\">\n                <li>\n                  資料來源 <a href=\"https://bit.ly/3oRQHCe\" target=\"_blank\" rel=\"noreferrer\"> {externalLinkSvg} https://bit.ly/3oRQHCe</a>\n                </li>\n                <li>\n                  廣東話同韓文Facebook群組 <a href=\"https://www.facebook.com/groups/806902066095149\" target=\"_blank\" rel=\"noreferrer\"> {externalLinkSvg} https://www.facebook.com/groups/806902066095149</a>\n                </li>\n                <li>\n                  老師 Buy Me a Coffee <a href=\"https://www.buymeacoffee.com/ncOhltm\" target=\"_blank\" rel=\"noreferrer\"> {externalLinkSvg} https://www.buymeacoffee.com/ncOhltm</a>\n                </li>\n                <li>\n                  老師 Patreon <a href=\"https://www.patreon.com/user?u=34023316\" target=\"_blank\" rel=\"noreferrer\"> {externalLinkSvg} https://www.patreon.com/user?u=34023316</a>\n                </li>\n              </ul>\n              <p className=\"app__author\"><small>應用程式製作 by <a href=\"https://github.com/winghimjns\" target=\"_blank\" rel=\"noreferrer\">winghimjns</a></small></p>\n            </div>\n          ) : null\n        }\n        {!loading && Array.isArray(searchResult) && searchResult.length > 100 ? <center><code>{`總共有${searchResult.length}相關字詞，顯示首100個結果`}</code><br /><br /></center> : null}\n        {!loading && Array.isArray(searchResult) ? (\n          <table className=\"app__table\">\n            <tbody>\n              {renderRows(searchResult.slice(0, 100), trimmedSearch)}\n            </tbody>\n          </table>\n        ) : null}\n        {!loading && Array.isArray(searchResult) && searchResult.length === 0 ? <center>沒有相關結果 결과가 없습니다</center> : null}\n        {!loading && Array.isArray(searchResult) && searchResult.length > 100 ? <center><code>{`總共有${searchResult.length}相關字詞，顯示首100個結果`}</code><br /><br /></center> : null}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}